;;; https://projecteuler.net/problem=2
;;;
;;; Even Fibonacci numbers
;;; Problem 2
;;;
;;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
;;;
;;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;;

;;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
; result: 4613732.0
; output: (empty)
; correct according to euler

(defun evenp (n)
  (= (mod n 2) 0))


(defun fib-tr (n i previous current)
       (if (>= i n)
             current
         (fib-tr n (+ i 1) current (+ previous current))))

(defun fibonacci (n) (fib-tr n 1 1 1))


(defun sum (n acc max)
  (let ((fib (fibonacci n)))
    (if (> fib max)
          acc
      (if (evenp fib)
            (sum (+ n 1) (+ fib acc) max)
        (sum (+ n 1) acc max)))))


(sum 1 0 4000000)