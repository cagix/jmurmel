
Changes in JMurmel-1.3 relative to JMurmel-1.2

 * the interpreter now expands macros only once


Changes in JMurmel-1.2 relative to JMurmel-1.1

 * changed/ fixed the behaviour around large numbers, no more silently cutting off decimal places
   when an integral number is needed
 * changed argument to sleep to "seconds" (was: internal-time-units-per-second),
   changed return value to nil (was: actually slept time in internal-time-units-per-second)
 * changed/ fixed "apply" from a special form to a function, "apply" no longer is a reserved word,
   "apply" now accepts symbols as the first argument as well
 * changed "::": renamed to "jmethod", static Java methods no longer want "nil" as a first (ignored) argument
 * changed macroexpand-1 to return multiple values as one would expect
 * changed setq to create undefined variables on the fly in interpreted mode

 * changed mlib: dotimes, dolist and doplist accept multiple result-forms (in an implicit progn)
   (was: only the first one was eval'd, the rest were silently ignored)
 * changed mlib: inplace modification macros (incf, decf...) now process 1 or more args
   (was: 1 or 2 arguments, anything more was silently ignored)

 * added the function "jproxy" to implement Java interfaces with Murmel code
 * added values, multiple-value-call and multiple-value-bind
 * added primitive functions assq, list*
 * added an optional parameter print-escape-p for primitive functions write, writeln, lnwrite
 * added special form "(declaim (optimize..."
 * added limited support for "macroexpand-1" in compiled code (quoted forms only)
 * errormessages contain the filename and linenumber (was: only linenumber)
 * added more complete support for "let dynamic" and "let* dynamic"
   (before 1.2 only "let* dynamic" in interpreted code was supported)
 * [f]round, [f]floor, [f]ceiling and [f]truncate now support 1 or 2 arguments (was: 1)
 * compiled code now can invoke interpreted closures
 * added some benchmarks and found some speedups
 * added some JFR integration
 * added *features* to the environment making it visible to Murmel code

 * mlib: added functions last, map-into, nconc,
   circular-list, compose, multiple-value-compose, conjoin, disjoin, curry, rcurry, doplist,
   unzip, unzip-tails,
   with-accumulator, summing, collecting, reverse-collecting, plist-keys, plist-values

 * backquote expansion generates more efficient code
 * some functions are "opencoded" (i.e. trampolines and/ or argcount checks are omitted,
   regular Java code is emitted instead)
 * fixed compiler primitive "list" to return a mutable list
 * fixed compiled "let*"
 * fixed "append" for compiled code
 * fixed using rplaca on varargs list
 * fixed/ cleaned up feature-flags
 * fixed search directory for load and require
 * fixed defmacro to support multiple body forms
 * fixed handling of symbol names such as \(\b^2\)\ -\ 4*\a*\c


Changes in JMurmel-1.1 relative to JMurmel-1.0

 * added feature expressions #+, #-, and, or, not
 * added reader macros #b #o #f for binary, oct and hex, #\ for characters,
   accept (and ignore) #'
 * added load, require, provide
 * added default library "mlib"
 * added documentation in markdown (murmel-langref.md, mlib.md)
 * fixed numerous bugs