expTrue wird mit neuer symtab neu gebaut

D:\robert\Workspace.java\platform\lambdajbm>c:\Apps\Java\X64\jdk8u252-b09\bin\java -jar target\benchmarks.jar  -p prog=2,3,4 LambdaJBenchmark.evalFiveTimes
# JMH version: 1.26
# VM version: JDK 1.8.0_252, OpenJDK 64-Bit Server VM, 25.252-b09
# VM invoker: c:\Apps\Java\X64\jdk8u252-b09\jre\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes
# Parameters: (prog = 2)

# Run progress: 0,00% complete, ETA 00:03:00
# Fork: 1 of 3
# Warmup Iteration   1: 222623,392 ns/op
# Warmup Iteration   2: 104040,692 ns/op
# Warmup Iteration   3: 94277,887 ns/op
# Warmup Iteration   4: 79153,679 ns/op
# Warmup Iteration   5: 78467,125 ns/op
# Warmup Iteration   6: 78969,205 ns/op
# Warmup Iteration   7: 80262,668 ns/op
# Warmup Iteration   8: 79749,226 ns/op
# Warmup Iteration   9: 80100,887 ns/op
# Warmup Iteration  10: 81492,021 ns/op
Iteration   1: 78945,551 ns/op
Iteration   2: 78803,252 ns/op
Iteration   3: 78724,974 ns/op
Iteration   4: 79232,845 ns/op
Iteration   5: 79157,641 ns/op
Iteration   6: 79200,700 ns/op
Iteration   7: 78933,325 ns/op
Iteration   8: 78894,931 ns/op
Iteration   9: 79105,301 ns/op
Iteration  10: 78863,283 ns/op

# Run progress: 11,11% complete, ETA 00:02:52
# Fork: 2 of 3
# Warmup Iteration   1: 213790,670 ns/op
# Warmup Iteration   2: 98971,168 ns/op
# Warmup Iteration   3: 93499,047 ns/op
# Warmup Iteration   4: 82592,558 ns/op
# Warmup Iteration   5: 77595,594 ns/op
# Warmup Iteration   6: 78346,132 ns/op
# Warmup Iteration   7: 79633,507 ns/op
# Warmup Iteration   8: 79444,169 ns/op
# Warmup Iteration   9: 79395,802 ns/op
# Warmup Iteration  10: 82266,058 ns/op
Iteration   1: 78008,752 ns/op
Iteration   2: 77492,907 ns/op
Iteration   3: 77581,766 ns/op
Iteration   4: 77379,406 ns/op
Iteration   5: 77952,420 ns/op
Iteration   6: 78124,134 ns/op
Iteration   7: 78004,247 ns/op
Iteration   8: 78719,635 ns/op
Iteration   9: 78935,388 ns/op
Iteration  10: 79098,554 ns/op

# Run progress: 22,22% complete, ETA 00:02:29
# Fork: 3 of 3
# Warmup Iteration   1: 208823,684 ns/op
# Warmup Iteration   2: 101417,217 ns/op
# Warmup Iteration   3: 93766,258 ns/op
# Warmup Iteration   4: 82819,761 ns/op
# Warmup Iteration   5: 78604,726 ns/op
# Warmup Iteration   6: 78755,464 ns/op
# Warmup Iteration   7: 79364,539 ns/op
# Warmup Iteration   8: 79365,339 ns/op
# Warmup Iteration   9: 79683,753 ns/op
# Warmup Iteration  10: 82231,132 ns/op
Iteration   1: 78457,293 ns/op
Iteration   2: 78527,303 ns/op
Iteration   3: 77979,122 ns/op
Iteration   4: 78454,768 ns/op
Iteration   5: 78375,948 ns/op
Iteration   6: 78496,679 ns/op
Iteration   7: 78466,492 ns/op
Iteration   8: 79206,626 ns/op
Iteration   9: 79675,259 ns/op
Iteration  10: 79628,890 ns/op


Result "com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes":
  78614,246 ±(99.9%) 398,885 ns/op [Average]
  (min, avg, max) = (77379,406, 78614,246, 79675,259), stdev = 597,032
  CI (99.9%): [78215,362, 79013,131] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_252, OpenJDK 64-Bit Server VM, 25.252-b09
# VM invoker: c:\Apps\Java\X64\jdk8u252-b09\jre\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes
# Parameters: (prog = 3)

# Run progress: 33,33% complete, ETA 00:02:08
# Fork: 1 of 3
# Warmup Iteration   1: 383593,791 ns/op
# Warmup Iteration   2: 225964,279 ns/op
# Warmup Iteration   3: 207933,356 ns/op
# Warmup Iteration   4: 161890,898 ns/op
# Warmup Iteration   5: 160754,187 ns/op
# Warmup Iteration   6: 160977,183 ns/op
# Warmup Iteration   7: 161814,871 ns/op
# Warmup Iteration   8: 161175,031 ns/op
# Warmup Iteration   9: 161836,009 ns/op
# Warmup Iteration  10: 161889,644 ns/op
Iteration   1: 163046,785 ns/op
Iteration   2: 164040,230 ns/op
Iteration   3: 163953,310 ns/op
Iteration   4: 165207,272 ns/op
Iteration   5: 164989,088 ns/op
Iteration   6: 166219,561 ns/op
Iteration   7: 166148,094 ns/op
Iteration   8: 166813,009 ns/op
Iteration   9: 166643,487 ns/op
Iteration  10: 163821,486 ns/op

# Run progress: 44,44% complete, ETA 00:01:47
# Fork: 2 of 3
# Warmup Iteration   1: 404185,921 ns/op
# Warmup Iteration   2: 262376,991 ns/op
# Warmup Iteration   3: 212186,262 ns/op
# Warmup Iteration   4: 182757,525 ns/op
# Warmup Iteration   5: 166868,198 ns/op
# Warmup Iteration   6: 165688,976 ns/op
# Warmup Iteration   7: 165919,790 ns/op
# Warmup Iteration   8: 165939,391 ns/op
# Warmup Iteration   9: 166300,767 ns/op
# Warmup Iteration  10: 165948,957 ns/op
Iteration   1: 166717,091 ns/op
Iteration   2: 167661,688 ns/op
Iteration   3: 169366,986 ns/op
Iteration   4: 169628,424 ns/op
Iteration   5: 170612,803 ns/op
Iteration   6: 170914,408 ns/op
Iteration   7: 169017,576 ns/op
Iteration   8: 169675,290 ns/op
Iteration   9: 169301,755 ns/op
Iteration  10: 173327,372 ns/op

# Run progress: 55,56% complete, ETA 00:01:25
# Fork: 3 of 3
# Warmup Iteration   1: 402673,334 ns/op
# Warmup Iteration   2: 274932,629 ns/op
# Warmup Iteration   3: 221238,729 ns/op
# Warmup Iteration   4: 189480,531 ns/op
# Warmup Iteration   5: 170765,254 ns/op
# Warmup Iteration   6: 169749,381 ns/op
# Warmup Iteration   7: 170517,996 ns/op
# Warmup Iteration   8: 169918,265 ns/op
# Warmup Iteration   9: 170033,200 ns/op
# Warmup Iteration  10: 170678,297 ns/op
Iteration   1: 169773,713 ns/op
Iteration   2: 171380,070 ns/op
Iteration   3: 171593,447 ns/op
Iteration   4: 173541,418 ns/op
Iteration   5: 173973,424 ns/op
Iteration   6: 174273,158 ns/op
Iteration   7: 173896,894 ns/op
Iteration   8: 174461,083 ns/op
Iteration   9: 175577,429 ns/op
Iteration  10: 173068,119 ns/op


Result "com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes":
  169288,149 ±(99.9%) 2479,292 ns/op [Average]
  (min, avg, max) = (163046,785, 169288,149, 175577,429), stdev = 3710,887
  CI (99.9%): [166808,857, 171767,441] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_252, OpenJDK 64-Bit Server VM, 25.252-b09
# VM invoker: c:\Apps\Java\X64\jdk8u252-b09\jre\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes
# Parameters: (prog = 4)

# Run progress: 66,67% complete, ETA 00:01:04
# Fork: 1 of 3
# Warmup Iteration   1: 3413201,576 ns/op
# Warmup Iteration   2: 1075149,631 ns/op
# Warmup Iteration   3: 1048201,121 ns/op
# Warmup Iteration   4: 884094,524 ns/op
# Warmup Iteration   5: 779463,670 ns/op
# Warmup Iteration   6: 618360,005 ns/op
# Warmup Iteration   7: 589022,876 ns/op
# Warmup Iteration   8: 582467,610 ns/op
# Warmup Iteration   9: 598415,868 ns/op
# Warmup Iteration  10: 579047,125 ns/op
Iteration   1: 580930,983 ns/op
Iteration   2: 578086,912 ns/op
Iteration   3: 585637,731 ns/op
Iteration   4: 580535,184 ns/op
Iteration   5: 586685,909 ns/op
Iteration   6: 597478,851 ns/op
Iteration   7: 580286,831 ns/op
Iteration   8: 578785,842 ns/op
Iteration   9: 578041,828 ns/op
Iteration  10: 577504,294 ns/op

# Run progress: 77,78% complete, ETA 00:00:43
# Fork: 2 of 3
# Warmup Iteration   1: 3954988,125 ns/op
# Warmup Iteration   2: 1075325,767 ns/op
# Warmup Iteration   3: 962406,924 ns/op
# Warmup Iteration   4: 931877,002 ns/op
# Warmup Iteration   5: 628547,100 ns/op
# Warmup Iteration   6: 592103,668 ns/op
# Warmup Iteration   7: 592293,689 ns/op
# Warmup Iteration   8: 598932,375 ns/op
# Warmup Iteration   9: 593968,563 ns/op
# Warmup Iteration  10: 591860,407 ns/op
Iteration   1: 595112,606 ns/op
Iteration   2: 594178,160 ns/op
Iteration   3: 594005,449 ns/op
Iteration   4: 596107,211 ns/op
Iteration   5: 594747,078 ns/op
Iteration   6: 592535,107 ns/op
Iteration   7: 597940,980 ns/op
Iteration   8: 595183,525 ns/op
Iteration   9: 597386,462 ns/op
Iteration  10: 634073,016 ns/op

# Run progress: 88,89% complete, ETA 00:00:21
# Fork: 3 of 3
# Warmup Iteration   1: 3876353,579 ns/op
# Warmup Iteration   2: 1131116,009 ns/op
# Warmup Iteration   3: 887434,369 ns/op
# Warmup Iteration   4: 778748,681 ns/op
# Warmup Iteration   5: 595218,689 ns/op
# Warmup Iteration   6: 571182,997 ns/op
# Warmup Iteration   7: 575607,465 ns/op
# Warmup Iteration   8: 573683,834 ns/op
# Warmup Iteration   9: 571738,381 ns/op
# Warmup Iteration  10: 577560,793 ns/op
Iteration   1: 575437,203 ns/op
Iteration   2: 570008,123 ns/op
Iteration   3: 572023,796 ns/op
Iteration   4: 572891,499 ns/op
Iteration   5: 570942,582 ns/op
Iteration   6: 571613,836 ns/op
Iteration   7: 571277,531 ns/op
Iteration   8: 571484,277 ns/op
Iteration   9: 570286,968 ns/op
Iteration  10: 574912,376 ns/op


Result "com.robertmayer.lambdaj.LambdaJBenchmark.evalFiveTimes":
  584537,405 ±(99.9%) 9180,000 ns/op [Average]
  (min, avg, max) = (570008,123, 584537,405, 634073,016), stdev = 13740,193
  CI (99.9%): [575357,405, 593717,405] (assumes normal distribution)


# Run complete. Total time: 00:03:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (prog)  Mode  Cnt       Score      Error  Units
LambdaJBenchmark.evalFiveTimes       2  avgt   30   78614,246 ±  398,885  ns/op
LambdaJBenchmark.evalFiveTimes       3  avgt   30  169288,149 ± 2479,292  ns/op
LambdaJBenchmark.evalFiveTimes       4  avgt   30  584537,405 ± 9180,000  ns/op

D:\robert\Workspace.java\platform\lambdajbm>